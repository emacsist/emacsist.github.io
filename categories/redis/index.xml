<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on emacsist</title>
    <link>https://emacsist.github.io/categories/redis/</link>
    <description>Recent content in redis on emacsist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Sep 2016 14:21:17 +0000</lastBuildDate>
    
	<atom:link href="https://emacsist.github.io/categories/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis中缓存策略</title>
      <link>https://emacsist.github.io/2016/09/09/redis%E4%B8%AD%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5/</link>
      <pubDate>Fri, 09 Sep 2016 14:21:17 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/09/09/redis%E4%B8%AD%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5/</guid>
      <description>Redis中缓存策略 volatile-lru：从数据集中，将</description>
    </item>
    
    <item>
      <title>生产环境一次Redis导致OOM Killer的问题</title>
      <link>https://emacsist.github.io/2016/09/06/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%80%E6%AC%A1redis%E5%AF%BC%E8%87%B4oom-killer%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 06 Sep 2016 14:18:36 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/09/06/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%80%E6%AC%A1redis%E5%AF%BC%E8%87%B4oom-killer%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>Redis 引发系统OOM Killer 昨晚（2016-9-5），生产环境的Red</description>
    </item>
    
    <item>
      <title>生产环境中禁止Redis执行Keys命令</title>
      <link>https://emacsist.github.io/2016/06/15/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%A6%81%E6%AD%A2redis%E6%89%A7%E8%A1%8Ckeys%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 15 Jun 2016 17:17:30 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/06/15/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%A6%81%E6%AD%A2redis%E6%89%A7%E8%A1%8Ckeys%E5%91%BD%E4%BB%A4/</guid>
      <description>配置文件 将想要禁止的命令，按以下格式加入配置文件中 rename-command FLUSHALL &amp;quot;&amp;quot; rename-command FLUSHDB</description>
    </item>
    
    <item>
      <title>Redis合并两实例的数据</title>
      <link>https://emacsist.github.io/2016/06/02/redis%E5%90%88%E5%B9%B6%E4%B8%A4%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 02 Jun 2016 16:31:32 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/06/02/redis%E5%90%88%E5%B9%B6%E4%B8%A4%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>AOF 与 RDB 这两个是Redis的备份方式。一个是快照（RDB），一</description>
    </item>
    
    <item>
      <title>redis常用技巧</title>
      <link>https://emacsist.github.io/2016/05/26/redis%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 26 May 2016 12:08:05 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/05/26/redis%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>批量删除key cat /tmp/keys.txst | xargs -I{} -P 3 -t -n 10 ./redis-cli -p 6379 -n 0 del {} 查询QPS watch</description>
    </item>
    
    <item>
      <title>Redis集群之twemproxy</title>
      <link>https://emacsist.github.io/2016/05/18/redis%E9%9B%86%E7%BE%A4%E4%B9%8Btwemproxy/</link>
      <pubDate>Wed, 18 May 2016 14:17:02 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/05/18/redis%E9%9B%86%E7%BE%A4%E4%B9%8Btwemproxy/</guid>
      <description>安装 git clone https://github.com/twitter/twemproxy.git cd twemproxy autoreconf -fvi ./configure --enable-debug=full --prefix=/ihome/db/redis/twemproxy make -j8 make install 安装完毕的结构： ╭─sky@</description>
    </item>
    
    <item>
      <title>基于Redis分布式锁Redisson使用例子</title>
      <link>https://emacsist.github.io/2016/05/06/%E5%9F%BA%E4%BA%8Eredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81redisson%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Fri, 06 May 2016 16:31:39 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/05/06/%E5%9F%BA%E4%BA%8Eredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81redisson%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90/</guid>
      <description>@Test public void testDistributeLock() throws InterruptedException { final CountDownLatch cdl = new CountDownLatch(10); long time = System.currentTimeMillis(); RedissonClient redisson = Redisson.create(); final RLock rLock = redisson.getLock(&amp;quot;hello-lock&amp;quot;); final Map&amp;lt;String, Integer&amp;gt; map</description>
    </item>
    
    <item>
      <title>Redis与Java使用经验</title>
      <link>https://emacsist.github.io/2015/07/06/redis%E4%B8%8Ejava%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Mon, 06 Jul 2015 16:07:44 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2015/07/06/redis%E4%B8%8Ejava%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</guid>
      <description>Redis 中的数据类型 String——字符串 Hash——字典 List</description>
    </item>
    
  </channel>
</rss>