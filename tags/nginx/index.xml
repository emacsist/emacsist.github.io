<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on emacsist</title>
    <link>https://emacsist.github.io/tags/nginx/</link>
    <description>Recent content in nginx on emacsist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Oct 2019 18:26:39 +0800</lastBuildDate>
    
	<atom:link href="https://emacsist.github.io/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TTFB优化</title>
      <link>https://emacsist.github.io/2019/10/08/ttfb%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 08 Oct 2019 18:26:39 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2019/10/08/ttfb%E4%BC%98%E5%8C%96/</guid>
      <description>原因 在本机 ping 服务器 , RTT 为 42 ms 左右. 但在 chrome 中访问一个直接返回 &amp;ldquo;ok&amp;rdquo; 的 200 请求, 要耗时 100 多ms . 优化 开启 应用的 TCPNoDelay 参数(即关闭 Nagel 算法). nginx + tomcat 的话, 两个</description>
    </item>
    
    <item>
      <title>Nginx 在 DSP 广告系统中的优化</title>
      <link>https://emacsist.github.io/2018/05/26/nginx-%E5%9C%A8-dsp-%E5%B9%BF%E5%91%8A%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 26 May 2018 16:26:05 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2018/05/26/nginx-%E5%9C%A8-dsp-%E5%B9%BF%E5%91%8A%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>环境: Distributor ID: Ubuntu Description: Ubuntu 16.04.2 LTS Release: 16.04 Codename: xenial nginx version: openresty/1.11.2.5 8核心 Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz 16GB 物理内存 limit $ulimit -a core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 64045 max locked memory (kbytes, -l) 64 max memory size (kbytes,</description>
    </item>
    
    <item>
      <title>Nginx常用操作</title>
      <link>https://emacsist.github.io/2016/02/26/nginx%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 26 Feb 2016 17:20:32 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/02/26/nginx%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>重写HTTP 某些URL 为 HTTPS URL location = /res/static/index.html { #方式一 #return 301 https://$http_host$request_uri$is_args$query_string; #方式二 return 301 https://$host$request_uri; #方式三 #rewrite ^/(.+) https://$host/$1 permanent; } 将所有HTTP请求重写为HTTPS server { return 301 https://$host$request_uri; } nginx 查找 server_name 的顺</description>
    </item>
    
    <item>
      <title>Nginx平滑升级</title>
      <link>https://emacsist.github.io/2016/01/25/nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</link>
      <pubDate>Mon, 25 Jan 2016 17:01:01 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/01/25/nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</guid>
      <description>原版本 ╭─sky@sky-linux /ihome/nginx/nginx-1.8 ╰─➤ ./sbin/nginx -V nginx version: nginx/1.8.0 built by gcc 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04) configure arguments: --prefix=/ihome/nginx/nginx-1.8 ╭─sky@sky-linux /ihome/nginx/nginx-1.8 ╰─➤ ╭─sky@sky-linux</description>
    </item>
    
    <item>
      <title>Apache AB 简单压力测试</title>
      <link>https://emacsist.github.io/2016/01/20/apache-ab-%E7%AE%80%E5%8D%95%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Wed, 20 Jan 2016 19:17:55 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/01/20/apache-ab-%E7%AE%80%E5%8D%95%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</guid>
      <description>以下的测试使用环境为ubuntu 安装ab工具 sudo apt-get install apache2-utils 使用 直接写入到 requestBody ab -T &amp;quot;Content-Type: application/json&amp;quot; -p /tmp/ab.data.user -n 1000 -c 500 http://localhost:8080/hello/action.do GET ab -n 1000 -c 500 http://localhost:8080/hello/action.do POST ab -T &amp;quot;application/x-www-form-urlencoded&amp;quot; -p /tmp/ab.data.user -n 1000 -c 500 http://localhost:8080/hello/action.do ab.data</description>
    </item>
    
    <item>
      <title>Nginx SSL 结合Tomcat 重定向URL变成HTTP的问题</title>
      <link>https://emacsist.github.io/2016/01/19/nginx-ssl-%E7%BB%93%E5%90%88tomcat-%E9%87%8D%E5%AE%9A%E5%90%91url%E5%8F%98%E6%88%90http%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 19 Jan 2016 15:42:46 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/01/19/nginx-ssl-%E7%BB%93%E5%90%88tomcat-%E9%87%8D%E5%AE%9A%E5%90%91url%E5%8F%98%E6%88%90http%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题 由于要配置服务器(Nginx + Tomcat）的SSL的问题（Nginx同时监听HTTP和HTTPS)，但是，如果用户访问的是HTTPS协</description>
    </item>
    
    <item>
      <title>Nginx添加免费SSL</title>
      <link>https://emacsist.github.io/2016/01/11/nginx%E6%B7%BB%E5%8A%A0%E5%85%8D%E8%B4%B9ssl/</link>
      <pubDate>Mon, 11 Jan 2016 16:10:01 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/01/11/nginx%E6%B7%BB%E5%8A%A0%E5%85%8D%E8%B4%B9ssl/</guid>
      <description>前提条件： 你的Nginx要有--with-http_ssl_module（即HTTPS模块） 申请免费HTTPS证书 Go Instantssl 步骤 提交你的CSR CSR: C</description>
    </item>
    
    <item>
      <title>Nginx负载均衡Tomcat切换注意事项</title>
      <link>https://emacsist.github.io/2015/12/17/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1tomcat%E5%88%87%E6%8D%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Thu, 17 Dec 2015 18:46:57 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2015/12/17/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1tomcat%E5%88%87%E6%8D%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>在生产环境使用nginx+tomcat做负载均衡。众所周知，tomcat的shutdown在生产环境是很慢的，如果这时候，不先修改nginx</description>
    </item>
    
    <item>
      <title>Nginx &#43; Tomcat &#43; Session 共享解决方案</title>
      <link>https://emacsist.github.io/2015/07/29/nginx-tomcat-session-%E5%85%B1%E4%BA%AB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 29 Jul 2015 11:31:36 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2015/07/29/nginx-tomcat-session-%E5%85%B1%E4%BA%AB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>注意， 这里使用的是 Linux + Tomcat 7.x + JDK 7 + Nginx + Spring Session 的方式 安装Redis Redis.io 配置Tomcat 这里为了简单，直接复制两份Tomcat，分别将目录命名为sp</description>
    </item>
    
    <item>
      <title>Nginx 负载均衡配置</title>
      <link>https://emacsist.github.io/2015/07/28/nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 28 Jul 2015 12:09:07 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2015/07/28/nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE/</guid>
      <description>Ningx 配置负载均衡 注意，默认情况下，它使用的是轮询的方式来进行负载均衡的。 示例配置代码 http { upstream myapp1 { server srv1.example.com; server srv2.example.com; server srv3.example.com; } server { listen 80; location / { proxy_pass http://myapp1; } } } 均衡策略 r</description>
    </item>
    
  </channel>
</rss>