<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on emacsist</title>
    <link>https://emacsist.github.io/tags/rust/</link>
    <description>Recent content in rust on emacsist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Jul 2020 18:00:31 +0800</lastBuildDate>
    
	<atom:link href="https://emacsist.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust内存泄漏排查</title>
      <link>https://emacsist.github.io/2020/07/22/rust%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Wed, 22 Jul 2020 18:00:31 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2020/07/22/rust%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%8E%92%E6%9F%A5/</guid>
      <description>原因 Rust 通常情况下, 不会有内存泄漏的. 毕竟是号称内存安全的语言</description>
    </item>
    
    <item>
      <title>从零开始编写一个库到crates中心</title>
      <link>https://emacsist.github.io/2020/06/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E5%BA%93%E5%88%B0crates%E4%B8%AD%E5%BF%83/</link>
      <pubDate>Mon, 29 Jun 2020 17:46:14 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2020/06/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E5%BA%93%E5%88%B0crates%E4%B8%AD%E5%BF%83/</guid>
      <description>注册账号 https://crates.io/ 它暂时只能用 Github 登录 获取 token 注册成功并登录后, 进入 Account Settings</description>
    </item>
    
    <item>
      <title>Rust编程风格资料</title>
      <link>https://emacsist.github.io/2020/06/28/rust%E7%BC%96%E7%A8%8B%E9%A3%8E%E6%A0%BC%E8%B5%84%E6%96%99/</link>
      <pubDate>Sun, 28 Jun 2020 18:07:49 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2020/06/28/rust%E7%BC%96%E7%A8%8B%E9%A3%8E%E6%A0%BC%E8%B5%84%E6%96%99/</guid>
      <description>Rust 官方相关文档 https://rust-lang.github.io/api-guidelines/about.html Libra 相关文档 https://developers.libra.org/docs/community/coding-guidelines</description>
    </item>
    
    <item>
      <title>&lt;Rust权威指南&gt;学习笔记</title>
      <link>https://emacsist.github.io/2020/06/19/rust%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 19 Jun 2020 22:32:06 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2020/06/19/rust%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>效率 离线本地文档 rustup doc 只检查能否编译(相对 cargo build 更快): cargo check 构建</description>
    </item>
    
    <item>
      <title>2019 Rust学习</title>
      <link>https://emacsist.github.io/2019/08/27/2019-rust%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Tue, 27 Aug 2019 11:13:20 +0800</pubDate>
      
      <guid>https://emacsist.github.io/2019/08/27/2019-rust%E5%AD%A6%E4%B9%A0/</guid>
      <description>准备工作 rustup rustup github rustup 用于安装 Rust , 并可管理 rust 不同的版本(stabl</description>
    </item>
    
    <item>
      <title>Rust 学习笔记</title>
      <link>https://emacsist.github.io/2018/03/12/rust-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 12 Mar 2018 18:59:38 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2018/03/12/rust-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>安装 curl https://sh.rustup.rs -sSf | sh 成功后, 将下面代码加到 ~/.bash_profile export PATH=&amp;quot;$HOME/.cargo/bin:$PATH&amp;quot; 更新: rustup update 卸载 rustup self</description>
    </item>
    
  </channel>
</rss>